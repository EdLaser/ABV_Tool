# This is a basic workflow to help you get started with Actions

name: Django CI/CD
env:
  SQL_ENGINE: django.db.backends.postgresql
  SQL_DATABASE: abv
  SQL_USER: abv
  SQL_PASSWORD: abv
  SQL_HOST: localhost
  SQL_PORT: 5432
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8, 3.9]
    services:
      postgres_main:
        image: postgres:13
        volumes:
          - postgres_data:/var/lib/postgresql/data/
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: $SQL_USER
          POSTGRES_PASSWORD: $SQL_PASSWORD
          POSTGRES_DB: $SQL_DATABASE
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: setup venv
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Install requirements
        run: |
          ls -a
          python -m pip install --upgrade pip
          pip install -r requierements.txt
      
      - name: Run Tests
        env: 
          DEBUG: "0"
          SECRET_KEY: CI_CD_TEST_KEY
          POSTGRES_USER: $SQL_USER
          POSTGRES_PASSWORD: $SQL_PASSWORD
          POSTGRES_DB: $SQL_DATABASE
          POSTGRES_PORT: 5432
        run: |
          ls -a
          python manage.py test

       
      
